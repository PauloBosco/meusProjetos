/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.com.lanhouse.view;

import br.com.lanhouse.dao.impl.ClienteDAO;
import br.com.lanhouse.dao.impl.ImpressoesDAO;
import br.com.lanhouse.dao.impl.ServicoDAO;
import br.com.lanhouse.dao.impl.UsoDAO;
import br.com.lanhouse.model.pessoas.Cliente;
import br.com.lanhouse.model.pessoas.Usuario;
import br.com.lanhouse.model.servicos.Impressoes;
import br.com.lanhouse.model.servicos.Servico;
import br.com.lanhouse.model.servicos.Uso;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author paulo
 */
public class ViewImprimir extends javax.swing.JDialog {

    /**
     * Creates new form ViewImprimir
     */
    public ViewImprimir(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextNomeDocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextValorDocumento = new javax.swing.JTextField();
        jBtnIncluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Nome do Documento");

        jLabel3.setText("Valor");

        jBtnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.png"))); // NOI18N
        jBtnIncluir.setText("Imprimir");
        jBtnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnIncluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextNomeDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextValorDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(140, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextNomeDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextValorDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jBtnIncluir)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnIncluirActionPerformed
        
            
            try {
                Random random = new Random();
                int numeroAleatorio = random.nextInt(9000);
                
                Servico serv = new Servico();
                serv.setCod_servico("" + numeroAleatorio);
                
                int IdUltimoUso = new UsoDAO().buscaUltimo(user.getIdUsuario());
                ServicoDAO servicoDAO = new ServicoDAO();
                int idServico = new UsoDAO().buscaIdServico(IdUltimoUso);
                
                if(idServico == 0){
                    servicoDAO.inserir(serv);
                    Servico servicoInserido = servicoDAO.buscarPorCodigoServico(serv.getCod_servico());
                    Uso uso = new UsoDAO().buscar(IdUltimoUso);
                    uso.setServico(servicoInserido);
                    new UsoDAO().alterarIdServico(uso);
                    
                    
                    Impressoes impressao = new Impressoes();
                    impressao.setIdServico(servicoInserido);
                    impressao.setNome(jTextNomeDocumento.getText());
                    impressao.setPreco(Double.parseDouble(jTextValorDocumento.getText()));

                    serv.addImpressoes(impressao);
                    
                    new ImpressoesDAO().inserir(impressao);
                }else{
                    // Verifica se o serviço já existe no banco de dados
                    Servico servicoExistente = servicoDAO.buscar(idServico);
                    String codServico = servicoExistente.getCod_servico();
                    
                    if (servicoExistente != null) {
                        System.out.println("Já existe um id_servico cadastrado, seu número é " + codServico);
                        
                        Uso uso = new UsoDAO().buscar(IdUltimoUso);
                        uso.setServico(servicoExistente);
                        new UsoDAO().alterarIdServico(uso);
                    } else {
                        servicoDAO.inserir(serv);
                        System.out.println("Servico Cadastrado");
                        
                    }
                    
                    Impressoes impressao = new Impressoes();
                    impressao.setIdServico(servicoExistente);
                    impressao.setNome(jTextNomeDocumento.getText());
                    impressao.setPreco(Double.parseDouble(jTextValorDocumento.getText()));
                    serv.addImpressoes(impressao);
                    new ImpressoesDAO().inserir(impressao);
                }
                
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(ViewImprimir.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ViewImprimir.class.getName()).log(Level.SEVERE, null, ex);
            }

            
             
         
        
        
    }//GEN-LAST:event_jBtnIncluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewImprimir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewImprimir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewImprimir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewImprimir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewImprimir dialog = new ViewImprimir(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnIncluir;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextNomeDocumento;
    private javax.swing.JTextField jTextValorDocumento;
    // End of variables declaration//GEN-END:variables

//    private void preencheTabela(ArrayList<Cliente> lista) throws SQLException, ClassNotFoundException {
//        DefaultTableModel dft = (DefaultTableModel) jTable1.getModel();
//         while (dft.getRowCount() > 0) {
//            dft.removeRow(0);
//        }
//         
//         for(Cliente c :lista){
//             String[] linha = {c.getNome(), c.getLogin()};
//            dft.addRow(linha);
//        
//         }
//    }

    
    private Usuario user;

    public void setUser(Usuario user) {
        this.user = user;
    }

}
